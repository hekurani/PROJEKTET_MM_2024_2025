;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   «·Ã„⁄… Ì‰«Ì— 12 2024
; Processor: 80C51
; Compiler:  ASEM-51 (Proteus)
;====================================================================

;====================================================================
; DEFINITIONS
;====================================================================

;====================================================================
; VARIABLES
;====================================================================


;====================================================================

;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================

      ; Reset Vector
      org   0000h
      jmp   Start

;====================================================================
; CODE SEGMENT
;====================================================================

      org   0100h
Start:	
   MOV SCON,#50H	;Asynchronous mode, 8-bit data and 1-stop bit
   MOV TMOD,#20H	;Timer1 in Mode2.
   MOV TH1,#253 	; // Load timer value for baudrate generation = 256 - (12000000)/(32*12*baudrate)
   MOV TL1,#253
   SETB TR1 	;      //Turn ON the timer for Baud rate generation
   
   MOV DPTR,#WELCOME_MSG
   CALL PRINT_MSG
   
LOOP:
   LCALL RECEIVE_BYTE
   LCALL SEND_BYTE
   
   JMP LOOP   
;#####################################################################

PRINT_MSG:
NEXT_CHAR:
   CLR A
   MOVC A,@A+DPTR
   INC DPTR
   CJNE A,#'$',PRINT_CHAR
   RET
PRINT_CHAR:
   CALL SEND_BYTE
   JMP NEXT_CHAR   
RET
   
SEND_BYTE:
   MOV SBUF,A		; Load the data to be transmitted
WAIT_TX:   
   JNB TI, WAIT_TX	; Wait till the data is trasmitted
   CLR TI 		; Clear the Tx flag for next cycle.
RET  

RECEIVE_BYTE:
WAIT_RX:
   JNB RI,WAIT_RX	; Wait till the data is received
   CLR RI		; Clear Receive Interrupt Flag for next cycle
   MOV A,SBUF		; return the received char
RET 

DELAY:
   
   MOV R5,#10
L3:
   MOV R6,#200
L2:   
   MOV R7,#250
L1:   
   DJNZ R7,L1
   DJNZ R6,L2
   DJNZ R5,L3
RET
;====================================================================

WELCOME_MSG:
   DB "SERIAL ECHO", 10,13,'$'
      END